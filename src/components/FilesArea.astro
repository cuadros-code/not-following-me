---
import IconFile from "./IconFile.astro";
---
<section class="dropzone-container">
  <div class="card dropzone dropzone-followers" data-dropzone-followers>
    <input class="inner" type="file" data-followers-file>
      <span class="file-name followers-text-file">Select your followers file</span>
    </input>
  </div>
  <div class="icon">
    <IconFile />
  </div>
  <div class="card dropzone dropzone-following" data-dropzone-following>
    <input class="inner" type="file" data-following-file>
      <span class="file-name following-text-file">Select your following file</span>
    </input>
  </div>
</section>
<section class="button-container">
  <button id="process-action" class="styled-button">Compare</button>
</section>

<div class="result-container">
  <h3 class="title-result">Who doesn't follow me</h3>
  <section class="list-results">
    <ul class="list"></ul>
  </section>
</div>

<script>
  import type { Followers } from "../interfaces/followers.interface" 
  import type { Following, FollowingContent } from "../interfaces/following.interface" 
  import { FileDropzone, DropzoneAction } from "../enums/dropzone.enum"
  import { getNotFollowingMe } from '../utils/compare-arrays'

  const followersFile = document.querySelector('[data-followers-file]');
  const followingFile = document.querySelector('[data-following-file]');

  const dropzoneFollowers = document.querySelector('[data-dropzone-followers]')
  const dropzoneFollowing = document.querySelector('[data-dropzone-following]')

  const button = document.getElementById('process-action')

  const resultContainer = document.querySelector('.result-container')

  let listFollowers: Followers[] = []
  let listFollowing: Following[] = []

  button?.addEventListener('click', processUserList)


  followersFile?.addEventListener('change', event => {
    addFileName(event, FileDropzone.FOLLOWERS)
  })

  followingFile?.addEventListener('change', event => {
    addFileName(event, FileDropzone.FOLLOWING)
  })

  function handleDragEvent(event: any, action: DropzoneAction) {
    if (action === DropzoneAction.ADD) {
      event.currentTarget.classList.add('hoverEvent');
    } else if (action === DropzoneAction.REMOVE) {
      event.currentTarget.classList.remove('hoverEvent');
    }
  }

  function initializeDropzone(dropzone: Element | null) {
    dropzone?.addEventListener("dragover", (event: Event) => handleDragEvent(event, DropzoneAction.ADD), false);
    dropzone?.addEventListener("dragleave", (event: Event) => handleDragEvent(event, DropzoneAction.REMOVE), false);
    dropzone?.addEventListener("drop", (event: Event) => handleDragEvent(event, DropzoneAction.REMOVE), false);
  }

  initializeDropzone(dropzoneFollowers);
  initializeDropzone(dropzoneFollowing);

  function addFileName(event: any, parentName: FileDropzone){
    if(event?.target?.files[0]){
      document.querySelector(`.${parentName}`)?.setAttribute('class', 'card dropzone active')
      convertFileToJson(event, parentName)
    }
  }

  function convertFileToJson(event: any, parent: FileDropzone){
    const file = event.target.files[0]
    const reader = new FileReader()

    reader.onload = function (eventFile: any) {
      try {
        if(parent === FileDropzone.FOLLOWERS){
          const textRef = document?.querySelector(`.followers-text-file`)
          const jsonFollowers = JSON.parse(eventFile.target.result) as Followers[]
          textRef!.innerHTML = `${jsonFollowers.length} <br/> Followers`
          listFollowers = jsonFollowers
        } else if (parent === FileDropzone.FOLLOWING){
          const textRef = document?.querySelector(`.following-text-file`)
          const jsonFollowing = JSON.parse(eventFile.target.result) as FollowingContent
          textRef!.innerHTML = `${jsonFollowing.relationships_following.length} <br/> Following`
          listFollowing = jsonFollowing.relationships_following
        }
      } catch (error) {
        alert('Error al procesar los archivos')
      }
    }; 
    reader.readAsText(file)
  }

  function processUserList(){
    if(listFollowers.length && listFollowing.length){
      resultContainer?.classList.add('visible')
      const notFollowersList: Followers[] = getNotFollowingMe(listFollowers, listFollowing)
      const ul = document.querySelector('.list')
      ul!.innerHTML = ""
      for (const notFollower of notFollowersList) {
        const li = document.createElement('li')
        const link = document.createElement('a')
        link.target = '_blank'
        link.rel = 'noopener noreferrer'
        link.href = notFollower.string_list_data[0].href
        link.textContent = notFollower.string_list_data[0].href
        li.appendChild(link)
        ul?.appendChild(li)
      }

      resultContainer?.scrollIntoView()
      
    } else {
      alert('Agrege los archivos necesarios')
    }
  }

</script>


<style>
	.dropzone-container {
    margin: auto;
    height: 40vh;
    width: 900px;
    display: grid;
    grid-template-columns: 5fr 1fr 5fr;
    background: #ffffff;
    border-radius: 4px;
    position: relative;
  }

  .dropzone-container::before {
    content: '';
    display: block;
    position: absolute;
    top: 10px;
    right: 10px;
    bottom: 10px;
    left: 10px;
    border: 2px solid #cecece;
    border-radius: 3px;
  }

  .button-container{
    display: flex;
    justify-content: center;
    margin-top: 25px;
  }

  .styled-button {
    display: block;
    padding: 10px 30px;
    font-size: 24px;
    background: #ffffff;
    border: 2px solid #000000;
    cursor: pointer;
    outline: none;
    border-radius: 4px;
    box-shadow: 5px 5px 0 0 #0616ce;
    position: relative;
    transition: box-shadow .13s ease;
    font-family: 'Poppins', sans-serif;
  }

  .styled-button::before {
    content: '';
    display: block;
    position: absolute;
    top: 3px;
    right: 3px;
    bottom: 3px;
    left: 3px;
    border: 2px solid #cecece;
    border-radius: 3px;
  }
  
  .styled-button:hover {
    box-shadow: 5px 5px 0 0 #2f2dad;
  }
  .styled-button::before:hover {
      border-width: 1px;
  }
  .styled-button:active {
    box-shadow: 1px 1px 0 0 #3533be;
  }

  .icon{
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .card {
    margin: 30px;
    font-size: 24px;
    background: #ffffff;
    border: 2px solid #000000;
    cursor: pointer;
    outline: none;
    border-radius: 4px;
    box-shadow: 5px 5px 0 0 #000000;
    position: relative;
    transition: box-shadow .13s ease;
    font-family: 'Poppins', sans-serif;
  }
 
  .card::before {
    content: '';
    display: block;
    position: absolute;
    top: 5px;
    right: 5px;
    bottom: 5px;
    left: 5px;
    border: 2px solid #cecece;
    border-radius: 3px;
  }

  .card.active{
    box-shadow: 5px 5px 0 0 #2fe20258;
  }
  

  .card .inner {
    height: 100%;
    cursor: pointer;
  }

  .card .inner::-webkit-file-upload-button {
    visibility: hidden;
  }

  .dropzone {
    position: relative;
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: 0.3s;
  }

  .dropzone .inner {
    position: relative;
    width: 100%;
    border: none;
    color: transparent;
  }

  .hoverEvent {
    transform: scale(1.04);
  }

  .file-name{
    position: absolute;
    font-size: 20px;
    color: #000;
    user-select: none;
    line-height: 22px;
    text-align: center;
  }

  .list-results{
    background: #ffffff;
    margin: 0px auto 50px auto;
    height: auto;
    min-height: 10vh;
    width: 900px;
    grid-template-columns: 1fr 1fr 1fr 1fr;
    border-radius: 4px;
    position: relative;
  }

  .list-results::before {
    content: '';
    display: block;
    position: absolute;
    top: 10px;
    right: 10px;
    bottom: 10px;
    left: 10px;
    border: 2px solid #cecece;
    border-radius: 3px;
  }

  .title-result {
    color: #000;
    text-align: center;
    margin: 80px 0px 5px 0px;
    line-height: 50px;
    font-size: 40px;
  }

  .list {
    color: #000;
    display: grid;
    grid-template-columns: 1fr 1fr;
    column-gap: 25px;
    row-gap: 5px;
    padding: 30px;
    list-style: none;
    font-size: 16px;
    position: relative;
    z-index: 99;
  }

  .result-container{
    visibility: hidden;
  }

  .result-container.visible {
    visibility: visible;
  }

</style>
